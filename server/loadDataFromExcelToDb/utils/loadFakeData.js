const { PrismaClient } = require("@prisma/client");
const prisma = new PrismaClient();

async function createComments() {
  const centers = [
    "ABU",
    "ALU",
    "ALH",
    "AMG",
    "ANB",
    "BUL",
    "VVU",
    "VKU",
    "VYU",
    "VIL",
    "GRN",
    "ZHG",
    "KBY",
    "LEN",
    "MKU",
    "MIR",
    "MOM",
    "NAM",
    "NER",
    "NKU",
    "NYR",
    "OYK",
    "OLN",
    "OLK",
    "SKU",
    "SNT",
    "TTT",
    "TMP",
    "UAL",
    "UMA",
    "UYA",
    "HNG",
    "CHP",
    "EVB",
    "YKT",
  ];

  // Пример текста комментария
  const comments = [
    "Потрясающая природа и уникальные пейзажи Якутии оставляют неизгладимые впечатления.", // 1
    "Традиционные праздники республики передают атмосферу радости и единства.", // 2
    "Загадочные гроты и пещеры привлекают внимание своей таинственностью.", // 3
    "Озера и реки Якутии поражают своей чистотой и красотой.", // 4
    "Увлекательные музеи позволяют глубже погрузиться в историю и культуру региона.", // 5
    "Этнографические комплексы открывают дверь в мир традиций и обычаев.", // 6

    "Геологические образования вызывают интерес и восхищение.", // 7
    "Священные места Якутии наполняют духовностью и энергетикой.", // 8
    "Алмазные карьеры и шахты подчеркивают богатство природных ресурсов.", // 9
    "Искусственные водоемы радуют глаз и предоставляют возможности для отдыха.", // 10
    "Заповедники сохраняют уникальную флору и фауну региона.", // 11
    "Экспозиции музеев поражают количеством древних артефактов.", // 12

    "Памятники истории и культуры напоминают о богатстве прошлого.", // 13
    "Краеведческие музеи знакомят с бытом и традициями коренных народов.", // 14
    "Археологические памятники свидетельствуют о древности и уникальности территории.", // 15
    "Священные горы являются местами силы и духовного паломничества.", // 16
    "Национальные праздники сопровождаются яркими традиционными обрядами.", // 17
    "Спортивные мероприятия, такие как конные состязания и гонки на собаках, популярны среди местного населения.", // 18

    "Игры и фестивали собирают вместе людей разных возрастов и интересов.", // 19
    "Зимой природа Якутии преображается, создавая волшебную атмосферу.", // 20
    "Жизнь крестьянской усадьбы раскрывает секреты традиционного уклада.", // 21
    "Мастер-классы по народным промыслам помогают сохранить древние ремесла.", // 22
    "Символы гостеприимства и традиционные сосуды для напитков передаются из поколения в поколение.", // 23
    "Чистый воздух и бескрайние просторы Якутии дарят ощущение свободы.", // 24

    "Ледяные скульптуры украшают зимние праздники и создают праздничное настроение.", // 25
    "Редкие археологические находки можно увидеть в музеях региона.", // 26
    "Народные ремесла и промыслы демонстрируют мастерство и творчество.", // 27
    "Подземные ледяные пещеры предлагают захватывающий опыт исследования.", // 28
    "Путешествие на оленьих упряжках оставляет яркие воспоминания.", // 29
    "Северное сияние добавляет магии ночному небу Якутии.", // 30
  ];

  try {
    for (let center of centers) {
      // Найдем любой landmark, связанный с данным административным центром
      const landmarks = await prisma.landmark.findMany({
        where: {
          adminCenterId: center,
        },
      });

      if (!landmarks || !landmarks.length) {
        console.warn(`Не найдено ни одного Landmark для ${center}`);
        continue;
      }

      await Promise.all(
        Array.from({ length: 6 }).map(async (_, i) => {
          // Выбираем первый найденный landmark
          const landmark = landmarks[0];

          // Создание комментария
          const comment = await prisma.comment.create({
            data: {
              text: `${comments[i % comments.length]}`,
              stars: Math.floor(Math.random() * 4) + 1,
              landmark: {
                connect: {
                  id: landmark.id, // Используем id конкретного landmark
                },
              },
              user: {
                connect: {
                  id: Math.floor(Math.random() * 7) + 1,
                },
              },
            },
          });

          // Создание записи в ReviewMetrics для данного административного центра
          await prisma.reviewMetrics.upsert({
            where: {
              adminCenterId: center, // Используем id административного центра
            },
            update: {
              sumOfAccessibility: {
                increment: Math.floor(Math.random() * 4) + 1,
              },
              sumOfImprovement: {
                increment: Math.floor(Math.random() * 4) + 1,
              },
              sumOfTourismInfrastructure: {
                increment: Math.floor(Math.random() * 4) + 1,
              },
              commentsCount: {
                increment: 1,
              },
            },
            create: {
              // Если запись не существует, создаем новую
              adminCenterId: center,
              sumOfAccessibility: Math.floor(Math.random() * 4) + 1,
              sumOfImprovement: Math.floor(Math.random() * 4) + 1,
              sumOfTourismInfrastructure: Math.floor(Math.random() * 4) + 1,
              commentsCount: 1,
            },
          });
        })
      );
    }

    console.log("Комментарии и метрики успешно созданы.");
  } catch (error) {
    console.error(error);
  } finally {
    await prisma.$disconnect();
  }
}

createComments().catch((err) => console.error(err));
